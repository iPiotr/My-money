{"ast":null,"code":"var _jsxFileName = \"/home/ipiotr/Pulpit/React/budget-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nconst initialState = {\n  incomeTransactions: [{\n    id: 1,\n    incomeText: \"Car sold\",\n    incomeAmount: 15000\n  }, {\n    id: 2,\n    incomeText: \"Payment\",\n    incomeAmount: 3000\n  }],\n  expenseTransactions: [{\n    id: 3,\n    expenseText: \"Car buy\",\n    expenseAmount: 10000\n  }, {\n    id: 4,\n    expenseText: \"Food\",\n    expenseAmount: 400\n  }]\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const addIncome = incomeTransaction => {\n    dispatch({\n      type: 'ADD_INCOME',\n      payload: incomeTransaction\n    });\n  };\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  };\n\n  const addExpense = expenseTransaction => {\n    dispatch({\n      type: 'ADD_EXPENSE',\n      payload: expenseTransaction\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      incomeTransactions: state.incomeTransactions,\n      expenseTransactions: state.expenseTransactions,\n      addIncome,\n      addExpense\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/ipiotr/Pulpit/React/budget-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","incomeTransactions","id","incomeText","incomeAmount","expenseTransactions","expenseText","expenseAmount","GlobalContext","GlobalContextProvider","children","state","dispatch","addIncome","incomeTransaction","type","payload","deleteTransaction","addExpense","expenseTransaction"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,kBAAkB,EAAE,CAChB;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,UAApB;AAAgCC,IAAAA,YAAY,EAAE;AAA9C,GADgB,EAEhB;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,UAAU,EAAE,SAApB;AAA+BC,IAAAA,YAAY,EAAE;AAA7C,GAFgB,CADH;AAKjBC,EAAAA,mBAAmB,EAAE,CACjB;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,WAAW,EAAE,SAArB;AAAgCC,IAAAA,aAAa,EAAE;AAA/C,GADiB,EAEjB;AAACL,IAAAA,EAAE,EAAE,CAAL;AAAQI,IAAAA,WAAW,EAAE,MAArB;AAA6BC,IAAAA,aAAa,EAAE;AAA5C,GAFiB;AALJ,CAArB;AAWA,OAAO,MAAMC,aAAa,GAAGX,aAAa,CAACG,YAAD,CAAnC;AAEP,OAAO,MAAMS,qBAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC;;AAEA,QAAMa,SAAS,GAAGC,iBAAiB,IAAI;AACnCF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMG,iBAAiB,GAAIf,EAAD,IAAQ;AAC9BU,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEd;AAFJ,KAAD,CAAR;AAMH,GAPD;;AASA,QAAMgB,UAAU,GAAGC,kBAAkB,IAAI;AACrCP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BlB,MAAAA,kBAAkB,EAAEU,KAAK,CAACV,kBADC;AAE3BI,MAAAA,mBAAmB,EAAEM,KAAK,CAACN,mBAFA;AAG3BQ,MAAAA,SAH2B;AAI3BK,MAAAA;AAJ2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKR,QANL,CADJ;AAUH,CApCM","sourcesContent":["import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer'\n\nconst initialState = {\n    incomeTransactions: [\n        {id: 1, incomeText: \"Car sold\", incomeAmount: 15000},\n        {id: 2, incomeText: \"Payment\", incomeAmount: 3000}\n    ],\n    expenseTransactions: [\n        {id: 3, expenseText: \"Car buy\", expenseAmount: 10000},\n        {id: 4, expenseText: \"Food\", expenseAmount: 400}\n    ]\n}\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalContextProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const addIncome = incomeTransaction => {\n        dispatch({\n            type: 'ADD_INCOME',\n            payload: incomeTransaction,\n        });\n    };\n\n    const deleteTransaction = (id) => {\n        dispatch({    \n            type: 'DELETE_TRANSACTION',\n            payload: id,\n        })\n\n\n    } \n\n    const addExpense = expenseTransaction => {\n        dispatch({\n            type: 'ADD_EXPENSE',\n            payload: expenseTransaction,\n        });\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            incomeTransactions: state.incomeTransactions,\n            expenseTransactions: state.expenseTransactions,\n            addIncome,\n            addExpense,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}