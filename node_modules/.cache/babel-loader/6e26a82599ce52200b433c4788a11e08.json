{"ast":null,"code":"var _jsxFileName = \"/home/ipiotr/Pulpit/React/budget-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nconst initialState = {\n  incomeTransactions: JSON.parse(localStorage.getItem('incomeTransactions')) || [],\n  expenseTransactions: JSON.parse(localStorage.getItem('expenseTransactions')) || []\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem(\"incomeTransactions\", JSON.stringify(state.incomeTransactions));\n    localStorage.setItem(\"expenseTransactions\", JSON.stringify(state.expenseTransactions));\n  });\n\n  const addIncome = incomeTransaction => {\n    dispatch({\n      type: 'ADD_INCOME',\n      payload: incomeTransaction\n    });\n  };\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  };\n\n  const addExpense = expenseTransaction => {\n    dispatch({\n      type: 'ADD_EXPENSE',\n      payload: expenseTransaction\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      incomeTransactions: state.incomeTransactions,\n      expenseTransactions: state.expenseTransactions,\n      addIncome,\n      addExpense,\n      deleteTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/ipiotr/Pulpit/React/budget-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","incomeTransactions","JSON","parse","localStorage","getItem","expenseTransactions","GlobalContext","GlobalContextProvider","children","state","dispatch","setItem","stringify","addIncome","incomeTransaction","type","payload","deleteTransaction","id","addExpense","expenseTransaction"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,SAA1C,QAA0D,OAA1D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,kBAAkB,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAX,KAA0D,EAD7D;AAEjBC,EAAAA,mBAAmB,EAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,KAA2D;AAF/D,CAArB;AAKA,OAAO,MAAME,aAAa,GAAGX,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMQ,qBAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CAACQ,OAAb,CAAqB,oBAArB,EAA2CV,IAAI,CAACW,SAAL,CAAeH,KAAK,CAACT,kBAArB,CAA3C;AACAG,IAAAA,YAAY,CAACQ,OAAb,CAAqB,qBAArB,EAA4CV,IAAI,CAACW,SAAL,CAAeH,KAAK,CAACJ,mBAArB,CAA5C;AACH,GAHQ,CAAT;;AAKA,QAAMQ,SAAS,GAAGC,iBAAiB,IAAI;AACnCJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMG,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BR,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAMH,GAPD;;AASA,QAAMC,UAAU,GAAGC,kBAAkB,IAAI;AACrCV,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEI;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BpB,MAAAA,kBAAkB,EAAES,KAAK,CAACT,kBADC;AAE3BK,MAAAA,mBAAmB,EAAEI,KAAK,CAACJ,mBAFA;AAG3BQ,MAAAA,SAH2B;AAI3BM,MAAAA,UAJ2B;AAK3BF,MAAAA;AAL2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKT,QAPL,CADJ;AAWH,CA1CM","sourcesContent":["import React, {createContext, useReducer, useEffect} from 'react';\nimport AppReducer from './AppReducer'\n\nconst initialState = {\n    incomeTransactions: JSON.parse(localStorage.getItem('incomeTransactions')) || [],\n    expenseTransactions: JSON.parse(localStorage.getItem('expenseTransactions')) || []\n}\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalContextProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    useEffect(() => {\n        localStorage.setItem(\"incomeTransactions\", JSON.stringify(state.incomeTransactions))\n        localStorage.setItem(\"expenseTransactions\", JSON.stringify(state.expenseTransactions))\n    })\n\n    const addIncome = incomeTransaction => {\n        dispatch({\n            type: 'ADD_INCOME',\n            payload: incomeTransaction,\n        });\n    };\n\n    const deleteTransaction = (id) => {\n        dispatch({    \n            type: 'DELETE_TRANSACTION',\n            payload: id,\n        })\n\n\n    } \n\n    const addExpense = expenseTransaction => {\n        dispatch({\n            type: 'ADD_EXPENSE',\n            payload: expenseTransaction,\n        });\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            incomeTransactions: state.incomeTransactions,\n            expenseTransactions: state.expenseTransactions,\n            addIncome,\n            addExpense,\n            deleteTransaction,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}